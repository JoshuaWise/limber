/**
 * Returns a calc() function that evaluates to a px value between
 * value-range[0] and value-range[1], depending on the viewport width's
 * position between viewport-range[0] and viewport-range[1].
 * By default, viewport-range is (phone-range[0] desktop-range[1]).
 */
between(value-range, viewport-range = phone-range[0] desktop-range[1])
	if length(value-range) != 2 || length(viewport-range) != 2
		error('each argument must be a tuplet of two values')
	value-min = force-px(value-range[0])
	value-max = force-px(value-range[1])
	view-min = force-px(viewport-range[0])
	view-max = force-px(viewport-range[1])
	if !value-min || !value-max || !view-min || !view-max
		error('arguments can only contain px units')
	if value-max - value-min == 0
		return value-min
	if view-max - view-min == 0
		return (value-min + value-max) / 2
	scaleYOverX = unit((view-max - view-min) / (value-max - value-min), '');
	return s('calc(1rem / %s - %s)', scaleYOverX, view-min / scaleYOverX - value-min)
	
/**
 * Used internally to apply "heading-" options from site-globals.
 */
-apply-heading-styles()
	properties = {
		font-family: heading-font-family
		font-size: heading-font-size
		font-weight: heading-font-weight
		font-style: heading-font-style
		line-height: heading-line-height
		margin: heading-margin
	}
	heading-names = 'h1' 'h2' 'h3' 'h4' 'h5' 'h6'
	backtrack-until-non-null = @(values, start) {
		return values[j] if values[j] != null for j in (start .. 0)
	}
	rules = ()
	for property, values in properties
		error('first value of "heading-" option cannot be null') if values[0] == null
		single-value = list-separator(values) != ','
		i = 0
		for heading-name in heading-names
			entry = {}
			entry[property] = single-value ? values : backtrack-until-non-null(values, i)
			push(rules, {
				'selector': heading-name
				'properties': entry
			})
			i = i + 1
	print-rule(rule) for rule in combine-rules(rules)
	
